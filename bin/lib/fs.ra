extern "lib_fs";

struct Path {
	var ptr;

	fn init() {
		ptr = (extern_call lib_fs._path_init("."));
	}

	fn init(ref path: String) {
		ptr = (extern_call lib_fs._path_init(path));
	}

	fn filename() extern_call lib_fs._path_filename(ptr);

	fn up() this / "..";

	fn mkdirs() extern_call lib_fs._path_mkdirs(ptr);

	fn exists() extern_call lib_fs._path_exists(ptr);

	fn unzip(ref path: Path) {
		extern_call lib_fs._path_unzip_a(ptr, path.ptr);
		refer path;
	}

	fn unzip(ref path: String) {
		extern_call lib_fs._path_unzip_b(ptr, path);
		return new Path(path);
	}

	fn `=`(ref a: Path) {
		this.ptr = a.ptr;
	}

	fn `=`(ref a) {
		this.init(a -> String);
	}

	fn `==`(ref a) this -> String == a -> String;

	fn `!=`(ref a) this -> String != a -> String;

	fn `/`(ref a: Path) {
		return new Path(extern_call lib_fs._path_append_path(ptr, a.ptr));
	}

	fn `/`(ref a) {
		return new Path(extern_call lib_fs._path_append_string(ptr, a -> String));
	}

	fn `->String`() extern_call lib_fs._path_string(ptr);
}

struct Writer {
	var ptr;

	fn init(ref filename) {
		ptr = (extern_call lib_fs._writer_init(filename -> String, false));
	}

	fn init(ref filename, ref binary: Boolean) {
		ptr = (extern_call lib_fs._writer_init(filename -> String, binary));
	}

	fn isOpen() extern_call lib_fs._writer_isOpen(ptr);

	fn write(ref s: String) extern_call lib_fs._writer_write(ptr, s);

	fn close() {
		if ptr != nil then {
			extern_call lib_fs._writer_close(ptr);
			ptr = nil;
		}
	}

	fn rem() {
		close();
	}
}

struct Reader {
	var ptr;

	fn init(ref filename) {
		ptr = (extern_call lib_fs._reader_init(filename -> String, false));
	}

	fn init(ref filename, ref binary: Boolean) {
		ptr = (extern_call lib_fs._reader_init(filename -> String, binary));
	}

	fn isOpen() extern_call lib_fs._reader_isOpen(ptr);

	fn read(ref n: Number) extern_call lib_fs._reader_read(ptr, n);

	fn read() read(1);

	fn size() extern_call lib_fs._reader_size(ptr);

	fn readLine() extern_call lib_fs._reader_readLine(ptr);

	fn close() {
		if ptr != nil then {
			extern_call lib_fs._reader_close(ptr);
			ptr = nil;
		}
	}

	fn rem() {
		close();
	}
}