load "std.ruo";

static mandel class {
	stringDensity(ref d) => {
		if d == 16 then {
			return " ";
		}
		if d > 14 then {
			return "@";
		}
		if d > 12 then {
			return "#";
		}
		if d > 10 then {
			return "*";
		}
		if d > 8 then {
			return "+";
		}
		if d > 6 then {
			return "=";
		}
		if d > 4 then {
			return "~";
		}
		if d > 2 then {
			return "-";
		}
		return ".";
	}

	mandelConverger(ref real, ref imag) => {
		var zReal = real;
		var zImag = imag;
		var r2;
		var i2;

		for i in [0 until 16] do {
			r2 = zReal * zReal;
			i2 = zImag * zImag;

			if r2 + i2 > 4 then {
				return i;
			}

			zImag = 2.0 * zReal * zImag + imag;
			zReal = r2 - i2 + real;
		}
		return 16;
	}

	draw(ref start_x, ref start_y, ref end_x, ref end_y, ref width, ref height) => {
		var dx = (end_x - start_x) / (width - 1);
		var dy = (end_y - start_y) / (height - 1);
		var s = "";
		for i in [0 until height] do {
			for j in [0 until width] do {
				s += stringDensity(mandelConverger(start_x + j * dx, end_y - i * dy));
			}
			s += "\n";
		}
		cons.setCursor(0, 0);
		print(s);
		printl("`Z` to Exit");
	}
}

var x = 0;
var y = 0;
var scale = 1;
var c;
var width = 120;
var height = 40;

console("cls");

while c != "z" do {
	mandel.draw(x - scale, y - scale, x + scale, y + scale, width, height);
	c = input.char();
	if c == "w" then {
		y += 2 / height * scale;
	} elseif c == "s" then {
		y -= 2 / height * scale;
	} elseif c == "a" then {
		x -= 6 / width * scale;
	} elseif c == "d" then {
		x += 6 / width * scale;
	} elseif c == "q" then {
		scale *= 2;
	} elseif c == "e" then {
		scale /= 2;
	}
}

console("cls");