load "graphics";

SDL.INIT();

window := new SDL.Window("Fractal Tree", 700, 500);
renderer := window.getRenderer();

fn drawBranch(ref x: Number, ref y: Number, ref a: Number, ref size: Number, ref afl: Number, ref afr: Number, ref sf: Number, ref i: Number) {
	color := Color.HSL(i / 13, 1, 0.5);
	ca := math.cos(a) * size;
	sa := math.sin(a) * size;
	renderer.put(new SDL.Line(x + ca, y + sa, color), x, y);
	if i > 0 then {
		drawBranch(x + ca, y + sa, a + afl, size * sf, afl, afr, sf, i - 1);
		drawBranch(x + ca, y + sa, a + afr, size * sf, afl, afr, sf, i - 1);
	}
}

fn drawTree(a) {
	drawBranch(
		370,
		500,
		-math.PI / 2,
		150,
		a,
		-1,
		(2 ** (1/2)) / 2,
		10);

	renderer.flush();
}

a := 1;

drawTree(a);

while true do {
	e := SDL.poll();
	if e["type"] == SDL.Event.QUIT then {
		SDL.QUIT();
		exit();
	} elif e["type"] == SDL.Event.KEYDOWN then {
		switch e["keysym"]["sym"] of {
			case 'a' do {
				a -= .01;
			}
			case 'd' do {
				a += .01;
			}
		}
		drawTree(a);
	}
}